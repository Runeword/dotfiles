% git

# Fix detached head state
git checkout -

# Display commit changes
git show

# List commits
git log

# List commits of all branches
git log --all

# Display state of the working tree
git status

# Display details of changes
git diff

# Diff between branches
git diff <branch-1> <branch-2>

# Diff between commits
git diff <old-commit> <new-commit>

# Stages all changes
git add -A

# Stages edited and new files, without deleted ones
git add .

# Stages edited and deleted files, without new ones
git add -u

# Interactive stage, stage parts of a file
git add -p <path>

# Display cache/index changes
git diff --cached

# Commit changes and add a message
git commit -m <message>

# Bypasses the pre-commit and commit-msg hooks
git commit -nm <message>

# Change message of the last commit then update message of the last commit on the remote
git commit --amend && git push -f

# Revert the last commit then fix the detached head
git revert <commit> && git checkout <current-branch>

# Unstage staged file
git reset <file>

# Delete commits after the specified one
git reset --hard <commit>

# Delete the last commit
git reset --hard HEAD~1

# Undo the last commit
git reset HEAD~1

# Update the remote branche
git push -f

# Untrack file
git rm --cached <file>

# Change message of older or multiple commits
# Displays a list of the last 3 commits on the current branch
# Then replace pick with reword before each commit message
# you want to change.
# Save and close the commit list file.
# In each resulting commit file, type the new commit message,
# save the file, and close it.
# Force-push the amended commits.
git rebase -i HEAD~3 && git push --force
