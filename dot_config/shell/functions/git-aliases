g  	lazygit
gh	gh repo create NAME --private --clone     	New private github repo
ghp	gh repo create NAME --public --clone      	New public github repo
in 	git init                                  	New repository
if	onefetch
ad 	git-forgit add                            	Stage changes
at 	git add --intent-to-add                   	Track changes
lo 	git-forgit log                            	List commits
b  	git branch                                	List branches
bn 	git checkout -b BranchName                	Create a new branch and switch to it
br 	git branch --move --force BranchNewName   	Rename branch
bd	git-forgit branch_delete                  	Delete local branch
bdl	git branch --delete --force BranchLocal   	Delete local branch
bdr	git push origin --delete BranchRemote     	Delete remote branch
bl	git-forgit blame
co 	git commit --message                      	Commit changes
ca	git commit --amend --message              	Change message of last commit
cl	__git_clone Documents/dev
cld	cloneit                                   	Download github directories or files
m 	git merge BranchName                      	Merge BranchName into current branch
cp	git-forgit cherry_pick
kb 	git-forgit checkout_branch
kf 	git-forgit checkout_file
kt 	git-forgit checkout_tag
kc	git-forgit checkout_commit
ko	git checkout --ours FileName              	Resolve merge conflict by keeping our version
t 	git status                                	Show files status
nu	__git_open_unstaged                       	Open unstaged files in neovim
ns	__git_open_staged                         	Open staged files in neovim
e 	nvim ~/.config/shell/functions/git-aliases
sp 	git stash push                                    	Stash staged + unstaged
ss	git stash push --staged                           	Stash staged
sa	git stash push --include-untracked                	Stash staged + unstaged + untracked
su	git stash push --include-untracked --keep-index   	Stash unstaged + untracked
sy	git stash apply                                   	Apply changes from last stash
sl	git-forgit stash_show                             	List stashes
sc	git stash clear                                   	Delete all stashes
sf	git-forgit stash_push                             	Stash selected files
ps 	git push
pl 	git pull
r	git-forgit checkout_file                    	Delete unstaged (git checkout --), (git restore)
rm	git rm -rf                                	Remove file
rb	git-forgit rebase
rb	git-forgit rebase --interactive           	Interactive rebase
rh	git reset --hard                          	Delete staged + unstaged
ru	git-forgit reset_head                     	Unstage changes (git restore --staged)
rts	git reset --soft HEAD~<n>                 	Revert last n commit and unstage their changes
rth	git reset --hard HEAD~<n>                 	Revert last n commit and delete their changes
cln	git-forgit clean --force -d               	Delete untracked files and directories
dd 	git-forgit diff                           	Show unstaged changes
dc	git-forgit diff --cached                  	Show staged changes
wa	git worktree add
wl	git worktree list
wr	git worktree remove
