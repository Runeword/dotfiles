(defwidget bar []
(centerbox :orientation "horizontal"
  (label :text "")
  (workspaces)
  (label :text "")
  ))

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
(eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
  (box :space-evenly true
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
      (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
        (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
          (label :text "${workspace.id}")
          )
        )
      )
    )
  )
)

;; (defwidget workspaces []
;; (box :class "workspaces"
;;     :orientation "horizontal"
;;     :space-evenly true
;;     :halign "start"
;;     :spacing 10
;;   (button :onclick "wmctrl -s 0" 1)
;;   (button :onclick "wmctrl -s 1" 2)
;;   (button :onclick "wmctrl -s 2" 3)
;;   (button :onclick "wmctrl -s 3" 4)
;;   (button :onclick "wmctrl -s 4" 5)
;;   (button :onclick "wmctrl -s 5" 6)
;;   (button :onclick "wmctrl -s 6" 7)
;;   (button :onclick "wmctrl -s 7" 8)
;;   (button :onclick "wmctrl -s 8" 9)))

      (defwindow bar
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :geometry (geometry :x "0%"
    :y "0%"
    :width "100%"
    :height "15px"
    :anchor "top center")
  ;; :reserve (struts :side "top" :distance "4%")
(bar))
