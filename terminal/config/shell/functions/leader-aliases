oa	nvim ~/.config/shell/functions/leader-aliases                                	open            aliases
oh	nvim ~/home-manager/charles/packages.nix                                     	open            packages
hgr	__home_manager_generation_remove                                             	home-manager    generation        remove
hgs	__home_manager_generation_switch                                             	home-manager    generation        switch
hp	__home_manager_packages_list                                                 	home-manager    packages          list
hu	__update_flake_inputs $HOME/home-manager                                     	home-manager    inputs            update
hs	home-manager switch --flake $HOME/home-manager                               	home-manager    config            build/activate
hd	home-manager expire-generations '-7 days'                                    	home-manager    generation        remove old
hv	home-manager --version                                                       	home-manager    version
ngs	__nixos_generation_switch                                                    	nixos           generation        switch
ngr	__nixos_generation_remove                                                    	nixos           generation        remove
nu	__update_flake_inputs $HOME/nixos                                            	nixos           inputs            update
ns	sudo nixos-rebuild switch --flake $HOME/nixos#$USER                          	nixos           config            build/boot/activate
ns	sudo nixos-rebuild boot --flake $HOME/nixos#$USER                            	nixos           config            build/boot
nv	nixos-version                                                                	nixos           version
ni	nix-info -m                                                                  	nixos           info
nd	sudo nix-collect-garbage --verbose --delete-old                              	nix             store             clean
nf	cd /nix/store && __open_file                                                 	nix             store             list
np	readlink -f result                                                           	flake           path              show
nb	nix build                                                                    	flake           package           build
nr	nix run                                                                      	flake           application       run
fl	nix flake update                                                            	flake           lock              recreate
fs	nix flake show                                                               	flake           outputs           show
fp	nix path-info --json | jq                                                    	flake           references        show
fd	nix store delete $(nix path-info --json | jq -r '.[].path')                  	flake           references        delete
fr	nix-store --query --referrers $(nix path-info --json | jq -r '.[].path')     	flake           referrers         show
fu	__update_flake_inputs .                                                      	flake           inputs            update
fm	nix flake metadata                                                           	flake           metadata
ft	__use_flake_template $HOME/templates                                         	flake           templates         use
g   	lazygit                                         	git
gi  	git init                                        	git                 repo                init
gf  	onefetch                                        	git                 repo                info
gl  	git-forgit log                                  	git                 commit              list
ga  	git-forgit add                                  	git                 file                stage
ga  	git add --intent-to-add File                     	git                 file                track
gt  	git status                                      	git                 file                list
gb  	git branch --list                               	git                 branch              list
gbn 	git switch --create NewBranch                   	git                 branch              new
gbr 	git branch --move --force OldName NewName       	git                 branch              rename
gm  	git merge Branch                                	git                 branch              merge
gbd 	git branch --delete --force BranchLocal         	git                 branch local        delete
gbd 	git-forgit branch_delete                        	git                 branch local        delete
gbdr	git push origin --delete BranchRemote           	git                 branch remote       delete
gbl 	git-forgit blame                                	git
gcn 	git commit --message Message                     	git                 commit              new
gcm 	git commit --message --amend                    	git                 message             update
gcl 	__git_clone Documents/dev                       	git                 repo                clone
gcf 	cloneit                                         	git                 Download github directories or files
gcp 	git-forgit cherry_pick                          	git
gkb 	git-forgit checkout_branch                      	git
gkf 	git-forgit checkout_file                        	git
gkt 	git-forgit checkout_tag                         	git
gkc 	git-forgit checkout_commit                      	git
gko 	git checkout --ours FileName                    	git                 Resolve merge conflict by keeping our version
gnu 	__git_open_unstaged                             	git                 Open unstaged files in neovim
gns 	__git_open_staged                               	git                 Open staged files in neovim
gsp 	git stash push                                  	git                 Stash staged + unstaged
gss 	git stash push --staged                         	git                 Stash staged
gsa 	git stash push --include-untracked              	git                 Stash staged + unstaged + untracked
gsu 	git stash push --include-untracked --keep-index 	git                 Stash unstaged + untracked
gsy 	git stash apply                                 	git                 Apply changes from last stash
gsl 	git-forgit stash_show                           	git                 List stashes
gsc 	git stash clear                                 	git                 Delete all stashes
gsf 	git-forgit stash_push                           	git                 Stash selected files
gps 	git push                                        	git
gpl 	git pull                                        	git
gr  	git-forgit checkout_file                        	git                 Discard (git checkout --, git restore)
gr  	git restore --staged                            	git                 Unstage
grm 	git rm -rf                                      	git                 Remove untracked
grb 	git-forgit rebase                               	git
grb 	git-forgit rebase --interactive                 	git                 Interactive rebase
grh 	git reset --hard                                	git                 Delete staged + unstaged
gru 	git-forgit reset_head                           	git                 Unstage changes (git restore --staged)
grts	git reset --soft HEAD~<n>                       	git                 Revert last n commit and unstage their changes
grth	git reset --hard HEAD~<n>                       	git                 Revert last n commit and delete their changes
gcln	git-forgit clean --force -d                     	git                 Delete untracked files and directories
gdd 	git-forgit diff                                 	git                 Show unstaged changes
gdc 	git-forgit diff --cached                        	git                 Show staged changes
gwa 	git worktree add                                	git
gwl 	git worktree list                               	git
gwr 	git worktree remove                             	git
gob	go build                                                                     	go
gog	go get                                                                       	go
gor	go run                                                                       	go
gom	go mod tidy                                                                  	go
goc	go clean -modcache                                                           	go
got	go test                                                                      	go
pp	pass git push                                                                	pass
pi	pass insert                                                                  	pass
pg	pass generate                                                                	pass
pc	__pass_clip                                                                  	pass
pr	__pass_rm                                                                    	pass
pk	gpgconf --reload gpg-agent                                                   	pass
pu	pass show GEMINI_API_KEY > /dev/null                                         	pass
cd	chezmoi diff --reverse                                                       	chezmoi
ci	chezmoi ignored                                                              	chezmoi
cc	__chezmoi_cd                                                                 	chezmoi
ce	chezmoi --refresh-externals apply                                            	chezmoi
ca	__chezmoi add                                                                	chezmoi
cy	__chezmoi apply                                                              	chezmoi
cf	__chezmoi_forget                                                             	chezmoi
cs	__chezmoi_status                                                             	chezmoi
cm	__chezmoi_managed                                                            	chezmoi
cpa	__chezmoi_private add                                                        	chezmoi
cpy	__chezmoi_private apply                                                      	chezmoi
ap	aws configure list-profiles                                                  	aws          profiles          list
al	aws lambda list-functions --profile <profile>                                	aws          lambda            list
ab	sam build                                                                    	aws          lambda            build
as	sam local start-api --profile <profile>                                      	aws          lambda            start/local
ai	sam init --runtime go --package-type Image                                   	aws          lambda            init/go
